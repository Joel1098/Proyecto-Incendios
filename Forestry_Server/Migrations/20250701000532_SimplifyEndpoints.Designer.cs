// <auto-generated />
using System;
using Forestry.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Forestry.Migrations
{
    [DbContext(typeof(ContextoBaseDeDatos))]
    [Migration("20250701000532_SimplifyEndpoints")]
    partial class SimplifyEndpoints
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Forestry.Models.BitacoraMedidaInicial", b =>
                {
                    b.Property<int>("IdBitacora")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdBitacora"));

                    b.Property<string>("Aspecto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CaracterFuego")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CombustiblesAdyacentes")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DireccionViento")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreada")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("IdIncendio")
                        .HasColumnType("integer");

                    b.Property<string>("Peligros")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PendienteFuego")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PosicionPendiente")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PotencialExpansion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Pregunta1")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Pregunta2")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TipoCombustible")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IdBitacora");

                    b.HasIndex("IdIncendio");

                    b.ToTable("BitacoraMedidaInicial", (string)null);
                });

            modelBuilder.Entity("Forestry.Models.Etapas", b =>
                {
                    b.Property<int>("idEtapa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("idEtapa"));

                    b.Property<string>("Color")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(7)
                        .HasColumnType("character varying(7)")
                        .HasDefaultValue("#007bff");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasDefaultValue("Activo");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Icono")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("Orden")
                        .HasColumnType("integer");

                    b.HasKey("idEtapa");

                    b.HasIndex("Orden");

                    b.ToTable("Etapas", (string)null);
                });

            modelBuilder.Entity("Forestry.Models.Incendio", b =>
                {
                    b.Property<int>("idIncendio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("idIncendio"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasDefaultValue("Activo");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaIni")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NombreComando")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("NombreDespacho")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<int>("idEtapa")
                        .HasColumnType("integer");

                    b.Property<int?>("idUsuarioResponsable")
                        .HasColumnType("integer");

                    b.HasKey("idIncendio");

                    b.HasIndex("Estado");

                    b.HasIndex("idEtapa");

                    b.HasIndex("idUsuarioResponsable");

                    b.ToTable("Incendio", (string)null);
                });

            modelBuilder.Entity("Forestry.Models.IncendioPersonal", b =>
                {
                    b.Property<int>("idIncendio")
                        .HasColumnType("integer")
                        .HasColumnOrder(0);

                    b.Property<int>("IdTrabajador")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasDefaultValue("Activo");

                    b.Property<DateTime>("FechaAsignacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("IncendioidIncendio")
                        .HasColumnType("integer");

                    b.Property<int?>("PersonalIdTrabajador")
                        .HasColumnType("integer");

                    b.Property<string>("RolEnIncendio")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("idIncendio", "IdTrabajador");

                    b.HasIndex("IdTrabajador");

                    b.HasIndex("IncendioidIncendio");

                    b.HasIndex("PersonalIdTrabajador");

                    b.ToTable("IncendioPersonal", (string)null);
                });

            modelBuilder.Entity("Forestry.Models.Personal", b =>
                {
                    b.Property<int>("IdTrabajador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdTrabajador"));

                    b.Property<string>("ApMaterno")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("ApPaterno")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Especialidad")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasDefaultValue("Activo");

                    b.Property<DateTime>("FechaCreada")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Turno")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("IdTrabajador");

                    b.HasIndex("Estado");

                    b.ToTable("Personal", (string)null);
                });

            modelBuilder.Entity("Forestry.Models.Reporte", b =>
                {
                    b.Property<int>("idReporte")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("idReporte"));

                    b.Property<string>("Contenido")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Detalles")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasDefaultValue("Activo");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Lugar")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Situacion")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int?>("idIncendio")
                        .HasColumnType("integer");

                    b.Property<int?>("idUsuario")
                        .HasColumnType("integer");

                    b.HasKey("idReporte");

                    b.HasIndex("idIncendio");

                    b.HasIndex("idUsuario");

                    b.ToTable("Reporte", (string)null);
                });

            modelBuilder.Entity("Forestry.Models.Usuarios", b =>
                {
                    b.Property<int>("idUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("idUsuario"));

                    b.Property<string>("ApMaterno")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("ApPaterno")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("DiasLaborales")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasDefaultValue("Activo");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("NumeTel")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<TimeSpan?>("TrabajoFin")
                        .HasColumnType("interval");

                    b.Property<TimeSpan?>("TrabajoInicio")
                        .HasColumnType("interval");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("idUsuario");

                    b.HasIndex("Estado");

                    b.HasIndex("Usuario")
                        .IsUnique();

                    b.ToTable("Usuarios", (string)null);
                });

            modelBuilder.Entity("Forestry.Models.BitacoraMedidaInicial", b =>
                {
                    b.HasOne("Forestry.Models.Incendio", "Incendio")
                        .WithMany()
                        .HasForeignKey("IdIncendio")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Incendio");
                });

            modelBuilder.Entity("Forestry.Models.Incendio", b =>
                {
                    b.HasOne("Forestry.Models.Etapas", "Etapa")
                        .WithMany("Incendio")
                        .HasForeignKey("idEtapa")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Forestry.Models.Usuarios", "UsuarioResponsable")
                        .WithMany("IncendiosResponsable")
                        .HasForeignKey("idUsuarioResponsable")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Etapa");

                    b.Navigation("UsuarioResponsable");
                });

            modelBuilder.Entity("Forestry.Models.IncendioPersonal", b =>
                {
                    b.HasOne("Forestry.Models.Personal", "Trabajador")
                        .WithMany()
                        .HasForeignKey("IdTrabajador")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Forestry.Models.Incendio", null)
                        .WithMany("IncendioPersonal")
                        .HasForeignKey("IncendioidIncendio");

                    b.HasOne("Forestry.Models.Personal", null)
                        .WithMany("IncendioPersonal")
                        .HasForeignKey("PersonalIdTrabajador");

                    b.HasOne("Forestry.Models.Incendio", "Incendio")
                        .WithMany()
                        .HasForeignKey("idIncendio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Incendio");

                    b.Navigation("Trabajador");
                });

            modelBuilder.Entity("Forestry.Models.Reporte", b =>
                {
                    b.HasOne("Forestry.Models.Incendio", "Incendio")
                        .WithMany("Reporte")
                        .HasForeignKey("idIncendio")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Forestry.Models.Usuarios", "Usuario")
                        .WithMany("Reporte")
                        .HasForeignKey("idUsuario")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Incendio");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Forestry.Models.Etapas", b =>
                {
                    b.Navigation("Incendio");
                });

            modelBuilder.Entity("Forestry.Models.Incendio", b =>
                {
                    b.Navigation("IncendioPersonal");

                    b.Navigation("Reporte");
                });

            modelBuilder.Entity("Forestry.Models.Personal", b =>
                {
                    b.Navigation("IncendioPersonal");
                });

            modelBuilder.Entity("Forestry.Models.Usuarios", b =>
                {
                    b.Navigation("IncendiosResponsable");

                    b.Navigation("Reporte");
                });
#pragma warning restore 612, 618
        }
    }
}
