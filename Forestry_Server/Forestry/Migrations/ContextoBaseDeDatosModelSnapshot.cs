// <auto-generated />
using System;
using Forestry.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Forestry.Migrations
{
    [DbContext(typeof(ContextoBaseDeDatos))]
    partial class ContextoBaseDeDatosModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Forestry.Models.Actualizacion", b =>
                {
                    b.Property<int>("idActualizacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Accion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaAccion")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Latitud")
                        .HasColumnType("decimal(18, 15)");

                    b.Property<decimal>("Longitud")
                        .HasColumnType("decimal(18, 15)");

                    b.Property<float>("Radio")
                        .HasColumnType("real");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idIncendio")
                        .HasColumnType("int");

                    b.HasKey("idActualizacion");

                    b.HasIndex("idIncendio");

                    b.ToTable("Actualizacion");
                });

            modelBuilder.Entity("Forestry.Models.ActualizacionRecursos", b =>
                {
                    b.Property<int>("IdActRecursos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreada")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdIncendio")
                        .HasColumnType("int");

                    b.Property<decimal>("Latitud")
                        .HasColumnType("decimal(18, 15)");

                    b.Property<decimal>("Longitud")
                        .HasColumnType("decimal(18, 15)");

                    b.Property<string>("NombreRecurso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumSerie")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdActRecursos");

                    b.HasIndex("IdIncendio");

                    b.ToTable("ActualizacionRecursos");
                });

            modelBuilder.Entity("Forestry.Models.BitacoraChequeoYPlaneacion", b =>
                {
                    b.Property<int>("IdBitacora")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FechaCreada")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdIncendio")
                        .HasColumnType("int");

                    b.Property<string>("Objetivo2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Objetivo3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Objetivo4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Objetivo5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pregunta1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pregunta2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pregunta3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pregunta4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pregunta5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pregunta6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pregunta7")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdBitacora");

                    b.HasIndex("IdIncendio");

                    b.ToTable("BitacoraChequeoYPlaneacion");
                });

            modelBuilder.Entity("Forestry.Models.BitacoraMedidaInicial", b =>
                {
                    b.Property<int>("IdBitacora")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Aspecto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CaracterFuego")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CombustiblesAdyacentes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DireccionViento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreada")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdIncendio")
                        .HasColumnType("int");

                    b.Property<string>("Peligros")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PendienteFuego")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PosicionPendiente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PotencialExpansion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pregunta1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pregunta2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoCombustible")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdBitacora");

                    b.HasIndex("IdIncendio");

                    b.ToTable("BitacoraMedidaInicial");
                });

            modelBuilder.Entity("Forestry.Models.BitacoraRecursos", b =>
                {
                    b.Property<int>("IdBitacora")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FechaCreada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaTermino")
                        .HasColumnType("datetime2");

                    b.Property<double>("HorasDescansadas")
                        .HasColumnType("float");

                    b.Property<double>("HorasTrabajadas")
                        .HasColumnType("float");

                    b.Property<int?>("IdIncendio")
                        .HasColumnType("int");

                    b.Property<string>("Recurso")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdBitacora");

                    b.HasIndex("IdIncendio");

                    b.ToTable("BitacoraRecursos");
                });

            modelBuilder.Entity("Forestry.Models.BitacoraRelacionTrabajo", b =>
                {
                    b.Property<int>("IdBitacora")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FechaCreada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaTermino")
                        .HasColumnType("datetime2");

                    b.Property<double>("HorasDescansadas")
                        .HasColumnType("float");

                    b.Property<double>("HorasTrabajadas")
                        .HasColumnType("float");

                    b.Property<int?>("IdIncendio")
                        .HasColumnType("int");

                    b.Property<string>("Recurso")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdBitacora");

                    b.HasIndex("IdIncendio");

                    b.ToTable("BitacoraRelacionTrabajo");
                });

            modelBuilder.Entity("Forestry.Models.BitacoraRevisionPosterior", b =>
                {
                    b.Property<int>("IdBitacora")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comentarios")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CriticadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreada")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdIncendio")
                        .HasColumnType("int");

                    b.Property<string>("NombreLider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreRevisadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Recursos")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdBitacora");

                    b.HasIndex("IdIncendio");

                    b.ToTable("BitacoraRevisionPosterior");
                });

            modelBuilder.Entity("Forestry.Models.BitacoraStatus", b =>
                {
                    b.Property<int>("IdBitacora")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FechaCreada")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdIncendio")
                        .HasColumnType("int");

                    b.Property<string>("RecursosActual")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecursosProyectado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SituacionActual")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SituacionProyectada")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdBitacora");

                    b.HasIndex("IdIncendio");

                    b.ToTable("BitacoraStatus");
                });

            modelBuilder.Entity("Forestry.Models.BitacoraTamanoIncendio", b =>
                {
                    b.Property<int>("IdBitacora")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionLocacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("E")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaContencion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaControl")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaLlegada")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdIncendio")
                        .HasColumnType("int");

                    b.Property<double>("Latitud")
                        .HasColumnType("float");

                    b.Property<string>("Legal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Longitud")
                        .HasColumnType("float");

                    b.Property<string>("Municipio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("N")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rango")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Secciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TamanoEstimado")
                        .HasColumnType("float");

                    b.Property<string>("USDA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UTM")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdBitacora");

                    b.HasIndex("IdIncendio");

                    b.ToTable("BitacoraTamanoIncendio");
                });

            modelBuilder.Entity("Forestry.Models.BitacoraVerificacionCI", b =>
                {
                    b.Property<int>("IdBitacora")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FechaCreada")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdIncendio")
                        .HasColumnType("int");

                    b.Property<string>("NombreFirma")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pregunta1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pregunta2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pregunta3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pregunta4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pregunta5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pregunta6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pregunta7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pregunta8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pregunta9")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdBitacora");

                    b.HasIndex("IdIncendio");

                    b.ToTable("BitacoraVerificacionCI");
                });

            modelBuilder.Entity("Forestry.Models.Incendio", b =>
                {
                    b.Property<int>("idIncendio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Etapa")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaIni")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreComando")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreDespacho")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("idReporte")
                        .HasColumnType("int");

                    b.HasKey("idIncendio");

                    b.HasIndex("idReporte");

                    b.ToTable("Incendio");
                });

            modelBuilder.Entity("Forestry.Models.Personal", b =>
                {
                    b.Property<int>("IdTrabajador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApMaterno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApPaterno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreada")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdUsuarios")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Turno")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTrabajador");

                    b.HasIndex("IdUsuarios");

                    b.ToTable("Personal");
                });

            modelBuilder.Entity("Forestry.Models.Recursos", b =>
                {
                    b.Property<int>("IdRecursos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreada")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdIncendio")
                        .HasColumnType("int");

                    b.Property<decimal>("Latitud")
                        .HasColumnType("decimal(18, 15)");

                    b.Property<decimal>("Longitud")
                        .HasColumnType("decimal(18, 15)");

                    b.Property<string>("NombreRecurso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumSerie")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdRecursos");

                    b.HasIndex("IdIncendio");

                    b.ToTable("Recursos");
                });

            modelBuilder.Entity("Forestry.Models.RecursosSolicitados", b =>
                {
                    b.Property<int>("IdRecursoSolicitado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CantidadSolicitada")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreada")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdIncendio")
                        .HasColumnType("int");

                    b.Property<string>("NombreRecurso")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdRecursoSolicitado");

                    b.HasIndex("IdIncendio");

                    b.ToTable("RecursosSolicitados");
                });

            modelBuilder.Entity("Forestry.Models.Reporte", b =>
                {
                    b.Property<int>("idReporte")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Detalles")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Lugar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Situacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idReporte");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Reporte");
                });

            modelBuilder.Entity("Forestry.Models.Usuarios", b =>
                {
                    b.Property<int>("idUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApMaterno")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("ApPaterno")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("DiasLaborales")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("NumeTel")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<TimeSpan>("TrabajoFin")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("TrabajoInicio")
                        .HasColumnType("time");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("idIncendio")
                        .HasColumnType("int");

                    b.HasKey("idUsuario");

                    b.HasIndex("idIncendio");

                    b.ToTable("_Usuarios");
                });

            modelBuilder.Entity("Forestry.Models.Actualizacion", b =>
                {
                    b.HasOne("Forestry.Models.Incendio", "Incendio")
                        .WithMany()
                        .HasForeignKey("idIncendio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Forestry.Models.ActualizacionRecursos", b =>
                {
                    b.HasOne("Forestry.Models.Incendio", "Incendio")
                        .WithMany()
                        .HasForeignKey("IdIncendio");
                });

            modelBuilder.Entity("Forestry.Models.BitacoraChequeoYPlaneacion", b =>
                {
                    b.HasOne("Forestry.Models.Incendio", "Incendio")
                        .WithMany()
                        .HasForeignKey("IdIncendio");
                });

            modelBuilder.Entity("Forestry.Models.BitacoraMedidaInicial", b =>
                {
                    b.HasOne("Forestry.Models.Incendio", "Incendio")
                        .WithMany()
                        .HasForeignKey("IdIncendio");
                });

            modelBuilder.Entity("Forestry.Models.BitacoraRecursos", b =>
                {
                    b.HasOne("Forestry.Models.Incendio", "Incendio")
                        .WithMany()
                        .HasForeignKey("IdIncendio");
                });

            modelBuilder.Entity("Forestry.Models.BitacoraRelacionTrabajo", b =>
                {
                    b.HasOne("Forestry.Models.Incendio", "Incendio")
                        .WithMany()
                        .HasForeignKey("IdIncendio");
                });

            modelBuilder.Entity("Forestry.Models.BitacoraRevisionPosterior", b =>
                {
                    b.HasOne("Forestry.Models.Incendio", "Incendio")
                        .WithMany()
                        .HasForeignKey("IdIncendio");
                });

            modelBuilder.Entity("Forestry.Models.BitacoraStatus", b =>
                {
                    b.HasOne("Forestry.Models.Incendio", "Incendio")
                        .WithMany()
                        .HasForeignKey("IdIncendio");
                });

            modelBuilder.Entity("Forestry.Models.BitacoraTamanoIncendio", b =>
                {
                    b.HasOne("Forestry.Models.Incendio", "Incendio")
                        .WithMany()
                        .HasForeignKey("IdIncendio");
                });

            modelBuilder.Entity("Forestry.Models.BitacoraVerificacionCI", b =>
                {
                    b.HasOne("Forestry.Models.Incendio", "Incendio")
                        .WithMany()
                        .HasForeignKey("IdIncendio");
                });

            modelBuilder.Entity("Forestry.Models.Incendio", b =>
                {
                    b.HasOne("Forestry.Models.Reporte", "Reporte")
                        .WithMany()
                        .HasForeignKey("idReporte");
                });

            modelBuilder.Entity("Forestry.Models.Personal", b =>
                {
                    b.HasOne("Forestry.Models.Usuarios", "Usuarios")
                        .WithMany()
                        .HasForeignKey("IdUsuarios");
                });

            modelBuilder.Entity("Forestry.Models.Recursos", b =>
                {
                    b.HasOne("Forestry.Models.Incendio", "Incendio")
                        .WithMany()
                        .HasForeignKey("IdIncendio");
                });

            modelBuilder.Entity("Forestry.Models.RecursosSolicitados", b =>
                {
                    b.HasOne("Forestry.Models.Incendio", "Incendio")
                        .WithMany()
                        .HasForeignKey("IdIncendio");
                });

            modelBuilder.Entity("Forestry.Models.Reporte", b =>
                {
                    b.HasOne("Forestry.Models.Usuarios", "idUsuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario");
                });

            modelBuilder.Entity("Forestry.Models.Usuarios", b =>
                {
                    b.HasOne("Forestry.Models.Incendio", "Incendio")
                        .WithMany()
                        .HasForeignKey("idIncendio");
                });
#pragma warning restore 612, 618
        }
    }
}
