version: '3.8'

services:
  # Base de datos PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: forestry_postgres
    environment:
      POSTGRES_DB: forestrydb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: forestry123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./BD/forestry_database.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - forestry_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API Forestry
  forestry-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: forestry_api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=forestry123
      - DB_NAME=forestrydb
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=forestrydb;Username=postgres;Password=forestry123;SSL Mode=Prefer;Trust Server Certificate=true
      - EmailSettings__SmtpServer=smtp.gmail.com
      - EmailSettings__SmtpPort=587
      - EmailSettings__SmtpUsername=joeldgjo98@gmail.com
      - EmailSettings__SmtpPassword=hiir jopq uuah fhhs
      - EmailSettings__EnableSsl=true
      - EmailSettings__FromEmail=joeldgjo98@gmail.com
      - EmailSettings__FromName=Forestry System
      - EmailSettings__EnableEmailNotifications=true
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - forestry_network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  forestry_network:
    driver: bridge 